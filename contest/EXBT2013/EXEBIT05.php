<?php require("../../includes/header.php"); ?><h1>Stack Curiosity</h1><div class="content">
<p>Aishwarya likes experimenting with various things. Once she was taught about the data structure stack in her 10th grade. Amazed by it, she took a sequence of numbers from <i>1</i> to <i>N</i> and tried to generate various permutations of it, by using a stack. She did this by randomizing push and print operations followed by a series of pop operations in the end, over the original sequence by scanning it from left to right. She defined a permutation of a sequence called <i>Stack Generatable Permutation(SGP)</i> as a permutation of a sequence which can be generated by the above procedure. Then it came to her mind, how to figure out quickly whether a permutation of a sequence is an <i>SGP</i> or not and how many <i>SGPs</i> starting from a number <i>K</i> can be obtained from a sequence of numbers ranging from <i>1</i> to <i>N</i> where <i>1&lt;=K&lt;=N</i>. You as a nerd are requested to help her.<br />
<br />For example , take <i>N=6</i> i.e. the sequence <i>1,2,3,4,5,6</i>. Now consider its permutation <i>2,4,6,5,3,1</i>. This is an SGP as this can be generated by the following operations, going from left to right:<br /><br /><br />
<i>push 1 =&gt; print 2 =&gt; push 3 =&gt; print 4 =&gt; push 5 =&gt; print 6 =&gt; pop 5 =&gt; pop 3 =&gt; pop 1</i><br /><br /><br />
You can consider print as an operation resulting from pushing a number to the stack and immediately popping it out.</p>
<p> </p>
<h3>Input</h3>
<p>The input consists of two parts. In part 1 of the input, the first line contains the number of test cases <i>T1</i>, after which <i>T1</i> test cases follow. Each test case begins with a line containing numbers <i>N</i> and <i>K</i> separated by a single space, where the next <i>K</i> lines(<i>sub-testcases</i>) contains various permutations of the sequence 1 to N where each number in the permutation has a space following it. After <i>T1</i> test cases are done the next line contains the number <i>T2</i> after which <i>T2</i> test cases follow for the second part of the problem. Each test case in the second part contains two space separated numbers <i>N</i> and <i>K</i> in the first line following which next <i>K</i> lines(<i>sub testcases</i>) contain any one of the numbers between <i>1</i> and <i>N</i>.</p>
<h3>Output</h3>
<p>For each test case in the first part of the problem, for each sub test case output 1 in a single line if the permutation is an SGP else output 0. For the second part for each <i>sub test case</i> output the number of SGPs starting from the given number followed by a new line.</p>
<h3>Constraints</h3>
<ul>
<li><b>1</b> ≤ <b>T1,T2,N,K</b> ≤ <b>50</b></li>
</ul>
<p> </p>
<h3>Example</h3>
<pre><b>Input:</b>
3
4 3
1 2 3 4
3 2 1 4
2 4 3 1
3 1
1 2 3
6 1
2 4 6 5 3 1
2
4 2
2
3
3 1
1

<b>Output:</b>
1
0
1
1
1
2
1
2

</pre><p> </p>
<h3>Explanation</h3>
<p><b>Example case</b><br /><br />
3 2 1 4 is not an SGP because POP operations must be done in the end only
</p>    </div><table cellspacing="0" cellpadding="0" align="left">
        <tr>
            <td width="14%">Author:</td>
            <td><a href="/users/prabhakar97">prabhakar97</a></td>
		</tr>
				                
        		<tr>
            <td width="14%">Date Added:</td>
            <td>22-02-2013</td>
        </tr>
        <tr>
            <td width="14%">Time Limit:</td>
            <td>1 sec</td>
        </tr>
        <tr>
            <td width="14%">Source Limit:</td>
            <td>50000 Bytes</td>
        </tr>
        <tr>
            <td width="14%">Languages:</td>
            <td>ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.8.1, CPP11, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAR, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.1.2, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC</td>
        </tr>
    </table> <?php require("../../includes/footer.php"); ?>