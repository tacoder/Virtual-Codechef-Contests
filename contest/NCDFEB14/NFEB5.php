<?php require("../../includes/header.php"); ?><h1>Palindrome Game</h1><div class="content">
<h2>Palindrome Problem</h2>
<p>
Gopu and Dholu are playing a new Palindrome game. Marbles of 10 different colours are used in the game, each labelled with a English letter from <b>"A"</b> to <b>"J"</b> both inclusive. First Gopu starts the game by placing one marble of any type, next Dholu place his marble next to Gopu's marble and game proceeds. In each turn one can place only one marble. After some time both agree to stop the game. Now to find the winner they call Golu.
</p>
<p>
Golu loves Palindromes. Palindrome is the string which remains same when it is reversed. Golu converts a pattern generated by the Gopu and Dholu (consisting of letters 'A'-'J' inclusive) to possible longest Palindrome by removing some characters. For example <b>"ADACDADA"</b> can be converted to Palindrome <b>"ADACADA"</b> by removing <b>"D"</b>. In the longest Palindrome Golu counts number of marbles placed by both Golu and Dholu separately. For each marble in the longest Palindrome, player who placed that marble gets 1 point. Now player with maximum points wins the game.      </p>
<p>
Golu gets scared when Gopu and Dholu play for large number of turns, as the pattern generated by them grows with the number of turns they play. Help Golu to decide the winner patterns generated by Gopu and Dholu.
</p>
<h3>INPUT</h3>
<p>
First line contains <b>T</b>, number of test cases.<br />
Each test case consists of a string <b>S</b>, consisting of Upper case English alphabets from <b>"A"</b> to <b>"J"</b>, both inclusive.
</p>
<h3>OUTPUT</h3>
<p>
For each test case print name of the winner <b>"Gopu"</b> or <b>"Dholu"</b> (quotes for clarity). If both score same points print <b>"Draw"</b>(quotes for clarity). If there are many longest palindromes, consider the palindrome that is lexicographically small. Among Substrings S and S', S is said to lexicographically small if all characters in S appears before or in the position same as their respective characters in S'.
</p>
<h3>Constraints</h3>
<ul>
<li>1 &lt;= T &lt;= 10</li>
<li>11 &lt;= |S| &lt;= 500</li>
</ul>
<p><b>NOTE</b> : </p>
<li>Consider that all inputs contain single longest Double Pattern.</li>
<li>Notice that Longest subsequence of Double Pattern, occurring at least twice contains all the characters in the Double Pattern.</li>
<li>Donâ€™t get confused with substring and subsequence. In subsequence characters are in the same order as in the super string and need not be contiguous.</li>
<h3>Sample Input</h3>
<pre>
3
ABCDEFGHIJA
ABCDEDCFGAB
BADADADAEFG
</pre><h3>Sample Output</h3>
<pre>
Gopu
Gopu
Dholu
</pre>    </div><table cellspacing="0" cellpadding="0" align="left">
        <tr>
            <td width="14%">Author:</td>
            <td><a href="/users/hkbharath">hkbharath</a></td>
		</tr>
				                
        		<tr>
            <td width="14%">Date Added:</td>
            <td>19-02-2014</td>
        </tr>
        <tr>
            <td width="14%">Time Limit:</td>
            <td>1 sec</td>
        </tr>
        <tr>
            <td width="14%">Source Limit:</td>
            <td>50000 Bytes</td>
        </tr>
        <tr>
            <td width="14%">Languages:</td>
            <td>ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.8.1, CPP11, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAR, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.1.2, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC</td>
        </tr>
    </table> <?php require("../../includes/footer.php"); ?>